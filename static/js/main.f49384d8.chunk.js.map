{"version":3,"sources":["components/CreateTodo.js","utils/firebaseConfig.js","components/TodoList.js","components/Aside.js","components/TodoApp.js","App.js","index.js"],"names":["CreateTodo","todosDb","useState","inputTodo","setInputTodo","className","onClick","e","preventDefault","task","isComplete","push","value","onChange","target","type","placeholder","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TodoList","todos","map","todo","index","tempTodo","toUpdate","database","ref","child","id","on","snapshot","val","update","handleIsComplete","remove","deleteItem","Aside","length","key","TodoApp","setTodos","useEffect","previousList","list","App","isSignedIn","setSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","onAuthStateChanged","user","currentUser","displayName","signOut","class","firebaseAuth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49384d8.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst CreateTodo = ({todosDb}) => {\r\n\r\n    const [inputTodo, setInputTodo] = useState('');\r\n\r\n    const handleInputTodo = (e) => {\r\n        setInputTodo(e.target.value)\r\n    };\r\n\r\n    const handleTodoList = (e) => {\r\n        e.preventDefault();\r\n        const task = {\r\n            inputTodo,\r\n            isComplete: false\r\n        };\r\n        todosDb.push(task);\r\n        setInputTodo('');\r\n    };\r\n\r\n\r\n    return (\r\n        <section className=\"todos\">\r\n            <section className=\"todo\">\r\n                <div>\r\n                    <div onClick={handleTodoList} className=\"todo__add\"><i className=\"fas fa-plus\"></i></div>\r\n                    <input value={inputTodo} onChange={handleInputTodo} className=\"todo__text todo__input\" type=\"text\" placeholder=\"Add a todo...\" />\r\n                </div>\r\n            </section>\r\n        </section >\r\n    );\r\n};\r\n\r\nexport default CreateTodo;\r\n\r\n//old code with json server\r\n/*\r\n    // const handleTodoList = (e) => {\r\n    //     e.preventDefault();\r\n    //     setTodos([{\r\n    //         title: inputTodo,\r\n    //         isComplete: false,\r\n    //     }, ...todos]);\r\n    //     setInputTodo('');\r\n    // };\r\n*/","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB72iMLHXNe-vpEEDxiLJHhr1YuuE_btho\",\r\n    authDomain: \"todo-1422f.firebaseapp.com\",\r\n    databaseURL: \"https://todo-1422f-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"todo-1422f\",\r\n    storageBucket: \"todo-1422f.appspot.com\",\r\n    messagingSenderId: \"387424968928\",\r\n    appId: \"1:387424968928:web:3fff4c178fb2d308ae3085\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;","import firebase from \"../utils/firebaseConfig\";\r\n\r\nconst TodoList = ({ todos }) => {\r\n\r\n  const handleIsComplete = (todo) => {\r\n    let toUpdate = firebase.database().ref(\"todosDb\").child(todo.id);\r\n    let tempTodo;\r\n\r\n    toUpdate.on(\"value\", (snapshot) => {\r\n      tempTodo = snapshot.val()\r\n    });\r\n\r\n    if (tempTodo.isComplete === false) {\r\n      toUpdate.update({\r\n        isComplete: true\r\n      });\r\n    } else {\r\n      toUpdate.update({\r\n        isComplete: false\r\n      });\r\n    };\r\n  };\r\n\r\n  // DELETE\r\n  const deleteItem = (todo) => {\r\n    let toDelete = firebase.database().ref(\"todosDb\").child(todo.id);\r\n    toDelete.remove();\r\n  };\r\n\r\n  return (\r\n    <section className=\"\">\r\n      {/* !!! IMPORTANT !!! ici index est une valeure automatique lorsqu'elle est passée dans map, elle génère un ID pour chaque map. C'est une des propriété de la méthode .map */}\r\n      {todos &&\r\n        todos.map((todo, index) => (\r\n          <div key={index} className=\"todo\">\r\n            <div onClick={() => handleIsComplete(todo)}>\r\n              <div\r\n                className={\r\n                  todo.isComplete\r\n                    ? \"todo__check--isComplete todo__check\"\r\n                    : \"todo__check\"\r\n                }\r\n              ></div>\r\n              <p\r\n                className={\r\n                  todo.isComplete\r\n                    ? \"todo__text--isComplete todo__text\"\r\n                    : \"todo__text\"\r\n                }\r\n              >\r\n                {todo.inputTodo}\r\n              </p>\r\n            </div>\r\n            <i onClick={() => deleteItem(todo)} className=\"todo__delete fas fa-slash\">\r\n              <i className=\"todo__delete--effect fas fa-slash\"></i>\r\n            </i>\r\n          </div>\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n\r\n// old code with JSON server\r\n/*\r\n  Check if complete\r\n  const handleIsComplete = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isComplete = !newTodos[index].isComplete;\r\n    setTodos(newTodos);\r\n  };\r\n*/","import firebase from \"firebase\";\r\n\r\nconst Aside = ({ todos, todosDb }) => {\r\n\r\n    const handleIsComplete = () => {\r\n        let toUpdate\r\n        firebase.database().ref(\"todosDb\").on(\"value\", (snapshot) => {\r\n            toUpdate = snapshot.val()\r\n        });\r\n\r\n        for (const key in toUpdate) {\r\n            const element = toUpdate[key];\r\n            if (element.isComplete === true) {\r\n                todosDb.child(key).remove();\r\n            };\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"aside\">\r\n            <p className=\"aside__itemsLeft\">{todos && todos.length} items left</p>\r\n            <button onClick={handleIsComplete} className=\"aside__clear\">Clear Completed</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Aside;\r\n\r\n// old code with json server\r\n/*\r\n    const handleIsComplete = () => {\r\n        const newTodos = todos.filter(todo => todo.isComplete === false);\r\n        setTodos(newTodos);\r\n    }\r\n*/","import CreateTodo from \"./CreateTodo\";\r\nimport TodoList from \"./TodoList\";\r\nimport \"./Todo.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Aside from \"./Aside\";\r\nimport firebase from \"../utils/firebaseConfig\";\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState(null);\r\n  const todosDb = firebase.database().ref(\"todosDb\");\r\n\r\n  //READ\r\n  useEffect(() => {\r\n    todosDb.on(\"value\", (snapshot) => {\r\n      let previousList = snapshot.val();\r\n      let list = [];\r\n      for (let id in previousList) {\r\n        list.push({ id, ...previousList[id] });\r\n      };\r\n      setTodos(list);\r\n    });\r\n  }, []);\r\n  //READ END\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CreateTodo todos={todos} setTodos={setTodos} todosDb={todosDb} />\r\n      <section className=\"todos\">\r\n        <TodoList\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n          todosDb={todosDb}\r\n        />\r\n        <Aside todos={todos} setTodos={setTodos} todosDb={todosDb}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n\r\n// Ancien code data sur json server\r\n/*\r\nuseEffect(() => {\r\n    fetch('http://localhost:3001/todos/')\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setTodos(data);\r\n        })\r\n}, []);\r\n\r\n\r\nconst handleDelete = (index) => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  };\r\n*/\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoApp from \"./components/TodoApp\";\r\nimport firebase from \"./utils/firebaseConfig\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\n\r\nfunction App() {\r\n  const [isSignedIn, setSignedIn] = useState(false);\r\n\r\n  const uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setSignedIn(!!user);\r\n      // console.log(user);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isSignedIn ? (\r\n        <>\r\n          <section className=\"header\">\r\n            <h1 className=\"header__title\">TODO</h1>\r\n            <div className=\"user\">\r\n              <h2 className=\"user__name\">\r\n                {firebase.auth().currentUser.displayName}\r\n              </h2>\r\n              <button\r\n                className=\"user__logout\"\r\n                onClick={() => firebase.auth().signOut()}\r\n              >\r\n                <i class=\"user__logout--icon far fa-share-square\"></i> Logout\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <TodoApp />\r\n        </>\r\n      ) : (\r\n        <div className=\"signIn\">\r\n          <h2 className=\"signIn__title\">Todo App with React & Firebase</h2>\r\n          <StyledFirebaseAuth\r\n            uiConfig={uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//test","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}